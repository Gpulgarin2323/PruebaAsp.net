//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PruebaAsp.net.WCFCrud {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFCrud.ICrud")]
    public interface ICrud {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrud/GetConsultarLibros", ReplyAction="http://tempuri.org/ICrud/GetConsultarLibrosResponse")]
        System.Data.DataSet GetConsultarLibros();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrud/GetConsultarLibros", ReplyAction="http://tempuri.org/ICrud/GetConsultarLibrosResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetConsultarLibrosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrud/GetInsertarLibro", ReplyAction="http://tempuri.org/ICrud/GetInsertarLibroResponse")]
        bool GetInsertarLibro(string[] oent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrud/GetInsertarLibro", ReplyAction="http://tempuri.org/ICrud/GetInsertarLibroResponse")]
        System.Threading.Tasks.Task<bool> GetInsertarLibroAsync(string[] oent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrud/GetActualizarLibro", ReplyAction="http://tempuri.org/ICrud/GetActualizarLibroResponse")]
        bool GetActualizarLibro(string[] oent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrud/GetActualizarLibro", ReplyAction="http://tempuri.org/ICrud/GetActualizarLibroResponse")]
        System.Threading.Tasks.Task<bool> GetActualizarLibroAsync(string[] oent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrud/GetEliminarLibro", ReplyAction="http://tempuri.org/ICrud/GetEliminarLibroResponse")]
        bool GetEliminarLibro(string[] oent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrud/GetEliminarLibro", ReplyAction="http://tempuri.org/ICrud/GetEliminarLibroResponse")]
        System.Threading.Tasks.Task<bool> GetEliminarLibroAsync(string[] oent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrud/GetConsultarLibroids", ReplyAction="http://tempuri.org/ICrud/GetConsultarLibroidsResponse")]
        System.Data.DataSet GetConsultarLibroids(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrud/GetConsultarLibroids", ReplyAction="http://tempuri.org/ICrud/GetConsultarLibroidsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetConsultarLibroidsAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICrudChannel : PruebaAsp.net.WCFCrud.ICrud, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CrudClient : System.ServiceModel.ClientBase<PruebaAsp.net.WCFCrud.ICrud>, PruebaAsp.net.WCFCrud.ICrud {
        
        public CrudClient() {
        }
        
        public CrudClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CrudClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CrudClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CrudClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetConsultarLibros() {
            return base.Channel.GetConsultarLibros();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetConsultarLibrosAsync() {
            return base.Channel.GetConsultarLibrosAsync();
        }
        
        public bool GetInsertarLibro(string[] oent) {
            return base.Channel.GetInsertarLibro(oent);
        }
        
        public System.Threading.Tasks.Task<bool> GetInsertarLibroAsync(string[] oent) {
            return base.Channel.GetInsertarLibroAsync(oent);
        }
        
        public bool GetActualizarLibro(string[] oent) {
            return base.Channel.GetActualizarLibro(oent);
        }
        
        public System.Threading.Tasks.Task<bool> GetActualizarLibroAsync(string[] oent) {
            return base.Channel.GetActualizarLibroAsync(oent);
        }
        
        public bool GetEliminarLibro(string[] oent) {
            return base.Channel.GetEliminarLibro(oent);
        }
        
        public System.Threading.Tasks.Task<bool> GetEliminarLibroAsync(string[] oent) {
            return base.Channel.GetEliminarLibroAsync(oent);
        }
        
        public System.Data.DataSet GetConsultarLibroids(int id) {
            return base.Channel.GetConsultarLibroids(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetConsultarLibroidsAsync(int id) {
            return base.Channel.GetConsultarLibroidsAsync(id);
        }
    }
}
